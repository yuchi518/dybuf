name: Build and Publish dybuf

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel==2.16.2
      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist py
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -q {project}
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"
          CIBW_ARCHS_MACOS: universal2
          CIBW_ARCHS_WINDOWS: AMD64
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build py --sdist --outdir dist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Collect distributions
        run: |
          mkdir -p upload
          find dist -name "*.whl" -exec cp {} upload/ \;
          find dist -name "*.tar.gz" -exec cp {} upload/ \;
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          packages-dir: upload
          password: ${{ secrets.PYPI_API_TOKEN }}
